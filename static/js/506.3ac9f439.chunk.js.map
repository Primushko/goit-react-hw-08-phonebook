{"version":3,"file":"static/js/506.3ac9f439.chunk.js","mappings":"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","sources":["redux/constacts/selectors.js","components/ContactForm/ContactForm.module.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.module.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.module.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.module.jsx","components/ContactList/ContactList.jsx","Pages/Contacts/Contacts.module.jsx","components/Modal/Modal.module.jsx","components/Modal/Modal.jsx","Pages/Contacts/Contacts.jsx","components/Section/Section.module.jsx","components/Section/Section.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 18px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  margin-top: 24px;\n  padding: 1.063em 1.5em;\n\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectContactsList } from 'redux/constacts/selectors';\nimport { addContact } from 'redux/constacts/operations';\nimport { Form, Input, Label, Button, AddUserIcon } from './ContactForm.module';\nimport { Notify } from 'notiflix';\n\nconst ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ number }) => number === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name ...\"\n          value={contacts.name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter number ...\"\n          value={contacts.number}\n        />\n      </Label>\n      <Button type=\"submit\">\n        <AddUserIcon />\n        New contact\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setContactsFilter } from 'redux/constacts/filtersSlice';\nimport { selectContactsFilter } from 'redux/constacts/selectors';\n\nimport { Label, Input } from './Filter.module';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUser, FaPhoneAlt, FaUserMinus } from 'react-icons/fa';\n\nexport const UserIcon = styled(FaUser)`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const PhoneIcon = styled(FaPhoneAlt)`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const UserDeletedIcon = styled(FaUserMinus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n\n  padding: 20px 20px;\n\n  border-radius: 24px;\n  border: 1px solid rgba(0, 0, 0, 0.04);\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  /* margin-left: 10px; */\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  padding: 0.563em 1em;\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 8px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/constacts/operations';\n\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n  UserIcon,\n  UserDeletedIcon,\n  PhoneIcon,\n} from './ContactListItem.module';\nimport { Notify } from 'notiflix';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n  };\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        <UserIcon />\n        {name}\n      </ContactName>\n      <ContactNumber>\n        <PhoneIcon />\n        {number}\n      </ContactNumber>\n      <Button onClick={() => handleDeleteContact(id)}>\n        <UserDeletedIcon />\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n\n  grid-gap: 24px;\n`;\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from 'redux/constacts/selectors';\n\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\n\nimport { ContactsList } from './ContactList.module';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\nexport const ContentPageContainer = styled.div`\n  padding: 38px 48px;\n  height: 100vh;\n\n  border-radius: 32px 32px 0 0;\n  background-color: #f9f9f9;\n`;\nexport const ContactNavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n`;\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  margin: 0;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 14px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  padding: 1.063em 1.5em;\n  margin-left: 28px;\n\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(138.13deg, #22343c75 25.87%, #1f2e3572 100%);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  border-radius: 25px;\n  overflow: hidden;\n\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: #f9f9f9;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { ModalContent, Overlay } from './Modal.module';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/constacts/operations';\nimport { selectError, selectIsLoading } from 'redux/constacts/selectors';\n\nimport { Section } from '../../components/Section/Section';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport {\n  AddUserIcon,\n  Button,\n  ContactNavWrapper,\n  ContentPageContainer,\n  FilterWrapper,\n  Title,\n} from './Contacts.module';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <ContentPageContainer>\n      <Section>\n        <ContactNavWrapper>\n          <Title>Contacts</Title>\n          <FilterWrapper>\n            <Filter />\n            <Button type=\"button\" onClick={handleOpenModal}>\n              <AddUserIcon />\n              New Contact\n            </Button>\n          </FilterWrapper>\n        </ContactNavWrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </ContentPageContainer>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  margin: auto;\n  padding: 26px 0;\n\n  background-color: #f9f9f9;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  text-align: center;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionContainer, Title } from './Section.module';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","AddUserIcon","styled","FaUserPlus","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Label","_templateObject3","Input","_templateObject4","Button","_templateObject5","_ref","onCloseModal","dispatch","useDispatch","useSelector","_jsxs","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","_ref2","alert","concat","_ref3","addContact","toString","unwrap","then","originalPromiseResult","Notify","catch","reset","autoComplete","children","_jsx","type","pattern","title","required","placeholder","Filter","filter","onChange","normalizedValue","currentTarget","toLowerCase","trim","setContactsFilter","UserIcon","FaUser","PhoneIcon","FaPhoneAlt","UserDeletedIcon","FaUserMinus","ContactItem","ContactName","ContactNumber","_templateObject6","_templateObject7","ContactsListItem","id","onClick","userId","deleteContact","ContactsList","ContactList","visibleContacts","_toConsumableArray","contact","includes","map","ContentPageContainer","ContactNavWrapper","Title","FilterWrapper","_templateObject8","_templateObject9","Overlay","ModalContent","Modal","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","_useState","useState","_useState2","_slicedToArray","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev","Section","ContactForm","SectionContainer"],"sourceRoot":""}